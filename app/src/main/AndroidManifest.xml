<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application
        android:name=".MyApplication"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:targetApi="31">
        <activity
            android:name=".GroupEditActivity"
            android:exported="false"
            />
        <activity
            android:name=".GroupInfoActivity"
            android:exported="false" />
        <activity
            android:name=".GroupParticipantAddActivity"
            android:exported="false" />
        <activity
            android:name=".GroupChatActivity"
            android:exported="false"
            android:theme="@style/AppThemeNo" />
        <activity
            android:name=".GroupCreateActivity"
            android:exported="false" />
        <activity
            android:name=".PostLikedByActivity"
            android:exported="false" />
        <activity
            android:name=".SettingsActivity"
            android:exported="false" />
        <activity
            android:name=".PostDetailActivity"
            android:exported="false" />
        <activity
            android:name=".ThereProfileActivity"
            android:exported="false" />
        <!--
Intent filters inform the system that inttents an application component is willing to accept.
            To receive text/image type of intents we will add intent filter to activity, that will handle that data
        -->
        <activity
            android:name=".AddPostActivity"
            android:exported="false">
            <intent-filter>

                <!-- For image -->
                <action android:name="android.intent.action.SEND" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="image/*" />
            </intent-filter>
            <intent-filter>

                <!-- For text -->
                <action android:name="android.intent.action.SEND" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="text/plain" />
            </intent-filter>
        </activity>
        <activity
            android:name=".ChatActivity"
            android:exported="false"
            android:theme="@style/AppThemeNo" />
        <activity
            android:name=".LoginActivity"
            android:exported="false" />
        <activity
            android:name=".DashboardActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".MainActivity_Java"
            android:exported="true"
            android:label="@string/app_name"
            android:theme="@style/Theme.Animex_java"/>
        <activity
            android:name=".Register_Activity"
            android:exported="false" />


        <service
            android:name=".notifications.FirebaseMessaging"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service> <!-- define file provider -->
        <!--
set the android:exported attribute to false;
        the FileProvider does not need to be public
        -->
        <!--
set the android:grantUriPermission attribute to true,
        to allow you grant temporary access to files
        -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.beltor.caetano.animex_java.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/paths" />
        </provider>
    </application>

</manifest>